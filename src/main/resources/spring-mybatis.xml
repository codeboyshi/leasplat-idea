<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		<util:properties id="db" location="classpath:db.properties"/>	
		<!-- 配置数据源连接池 -->
		<bean id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close"> 
			<property name="driverClassName" 
				value="#{db.driver}" />
			<property name="url" 
				value="#{db.url}" />
			<property name="username" 
				value="#{db.user}" />
			<property name="password" 
				value="#{db.pwd}" />
			<property name="maxActive" value="#{db.maxSize}" />
		</bean>
		<!-- sessionFactory -->
		<!-- myBatis 执行sql的容器bean -->
		<!-- sessionFactory作为工厂创建了sessionFactory类型的对象！
		Spring中FactoryBean为结尾的都是工厂Bean,创建
		的对象不是本类类型，是生产的“产品”类型 -->
		<bean id="sqlSessionFactory"
		 class="org.mybatis.spring.SqlSessionFactoryBean">
		 	<property name="dataSource" ref="dataSource"/>
		 	<!-- resource:/mapper/UserMapper.xml -->
		 	<!-- 指定映射文件的位置 -->
		
			<property name="mapperLocations" 
				value="classpath:mapper/*.xml" />

		</bean>
		<!-- 配置Mapper接口扫描器,指定映射器位置 -->
		<bean id="mapperScanner"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 扫描cn.tedu.note.dao中的mapper接口 -->
			<property name="basePackage" 
			value="cn.shi.leasplat.dao"/>
			
			<!-- 写不写都好使<property name="SqlsessionFactory"
			ref="SqlsessionFactory"/> -->
		</bean>
		
		<!-- 事务管理器配置，单数据源事务 -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		<!-- 使用annotation定义事务 -->
		<tx:annotation-driven transaction-manager="txManager"/>
</beans>